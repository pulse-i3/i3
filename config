###################################################
####:		   Application Bindings           :####
###################################################

bindsym Mod1+r exec --no-startup-id walrm
bindsym Mod1+m exec xfce4-terminal -e mocp
bindsym Mod1+e exec geary
bindsym Mod1+c exec galculator
bindsym Mod1+g exec /usr/bin/firefox
bindsym Mod1+f exec xfce4-terminal -e ranger
bindsym Print exec --no-startup-id ~/.screenshot.sh
#----------------------------------------------------------------------------
# volume
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 5%+ && pkill -RTMIN+1 i3blocks
bindsym XF86AudioMute exec --no-startup-id amixer -D pulse sset Master 5%- && pkill -RTMIN+1 i3blocks
# Backlight control
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight +3
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -3

#----------------------------------------------------------------------------
workspace_layout tabbed

bindsym Mod4+l exec --no-startup-id ".local/bin/blur-lock"

font pango:Source Code Pro Regular 9

exec --no-startup-id dex --autostart --environment i3

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
#exec --no-startup-id nm-applet


# use Mouse+Mod1 to drag floating windows to their wanted position
floating_modifier Mod4

# start a terminal
bindsym Mod1+Return exec i3-sensible-terminal

# kill focused window
bindsym Mod4+q kill

# start dmenu (a program launcher)
#bindsym Mod4+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
bindsym Mod4+d exec rofi -modi drun -show drun \
               -config ~/.config/rofi/rofidmenu.rasi
# set floating (nontiling)for apps needing it
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Connman-gtk"] floating enable

# set floating (nontiling) for special apps
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable

exec --no-startup-id picom
# set powersavings for display:
exec --no-startup-id xset s 480 dpms 600 600 600

# bind program to workspace and focus to them on startup:
assign [class="Xfce4-terminal"] $ws1
assign [class="(?i)firefox"] $ws2
assign [class="Geary"] $ws2
assign [class="Thunar"] $ws3

# automatic set focus new window if it opens on another workspace then the current:
for_window [class=Xfce4-terminal] focus
for_window [class=(?i)firefox] focus
for_window [class=Thunar] focus
for_window [class=Geary] focus

# bind program to floating
for_window [window_role="About"] floating enable
for_window [class="mpv"] floating enable
for_window [class="Xfce4-terminal"] floating enable

# Desktop notifications
exec --no-startup-id dbus-launch dunst --config ~/.config/dunst/dunstrc

# application launcher
bindsym Mod1+space exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym Mod4+Left focus left
bindsym Mod4+Down focus down
bindsym Mod4+Up focus up
bindsym Mod4+Right focus right

# move focused window
bindsym Mod4+Shift+Left move left
bindsym Mod4+Shift+Down move down
bindsym Mod4+Shift+Up move up
bindsym Mod4+Shift+Right move right

# split in horizontal orientation
bindsym Mod4+h split h

# split in vertical orientation
bindsym Mod4+v split v

# enter fullscreen mode for the focused container
bindsym Mod4+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym Mod4+t layout tabbed
bindsym Mod4+s layout toggle split

# toggle tiling / floating
bindsym Mod4+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym Mod4+space focus mode_toggle

# focus the parent container
bindsym Mod4+a focus parent

# focus the child container
#bindsym Mod1+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"

# switch to workspace
bindsym Mod4+1 workspace number $ws1
bindsym Mod4+2 workspace number $ws2
bindsym Mod4+3 workspace number $ws3

# move focused container to workspace
bindsym Mod4+Shift+1 move container to workspace number $ws1
bindsym Mod4+Shift+2 move container to workspace number $ws2
bindsym Mod4+Shift+3 move container to workspace number $ws3

# reload the configuration file
bindsym Mod4+Shift+r reload
# exit i3 (logs you out of your X session)
bindsym Mod4+Shift+q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or Mod1+r
        bindsym Return mode "default"
}

bindsym Mod4+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
		font pango:FontAwesome 9
        status_command i3blocks -c ~/.config/i3/i3blocks.conf
}
